{"version":3,"sources":["serviceWorker.js","components/Global/Content.js","components/App.js","components/Home-Layout/home-layout.js","components/Logo/logo.js","containers/login/components/login-layout.js","containers/login/components/Header-login.js","containers/login/components/input.js","components/Buttons/button.js","containers/login/containers/login.js","components/footer/Footer.js","containers/home/home.js","components/home-admin/homeAdmin.js","components/Panel/components/Panel-layout.js","components/Menu/Menu.js","components/Panel/Panel.js","routes.js","index.js"],"names":["Boolean","window","location","hostname","match","Content","body","this","props","react_default","a","createElement","Component","App","children","className","Global_Content","HomeLayout","Logo","LoginLayout","HeaderLogin","Input","tipo","type","placeholder","Button","clase","contenido","Login","state","user","_this","currentUser","login_layout","Header_login","input","Link","to","components_Buttons_button","Footer","usuario","typeUser","Home","Home_Layout_home_layout","Logo_logo","containers_login","footer_Footer","HomeAdmin","PanelLayout","Menu","menu","MenuApi","options","map","item","key","id","text","Panel","Panel_layout","components_Menu_Menu","AppRoutes","components_App","Switch","Route","exact","path","component","render","BrowserRouter","routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7f17541.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Dependencies\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Assets\r\n// import './css/Content.css';\r\n\r\nclass Content extends Component {\r\n  static propTypes = {\r\n    body: PropTypes.object.isRequired\r\n  }\r\n\r\n  render() {\r\n    const { body } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {body}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content\r\n","// Dependencies\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Components\r\n\r\n//Header,Content,Footer\r\nimport Content from './Global/Content'\r\n\r\n//Data\r\n\r\n//Data del menu\r\n\r\nclass App extends Component{\r\n    static propTypes = {\r\n      children: PropTypes.object.isRequired\r\n    }\r\n  \r\n    render() {\r\n      const { children } = this.props;\r\n  \r\n      return (\r\n        <div className='app'>          \r\n          <Content body={children} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  export default App;\r\n  ","import React from 'react'\r\nimport './home-layout.css'\r\n\r\nconst HomeLayout = (props) =>{\r\n    return(\r\n        <div className='Home'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeLayout","import React from 'react'\r\nimport './logo.css'\r\n\r\nconst Logo = (props) => {\r\n    return(\r\n        <h1 className='logo'>\r\n            LOGO\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default Logo","import React from 'react'\r\nimport './login.css'\r\nconst LoginLayout = (props) => {\r\n    return(\r\n        <div className='login'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginLayout","import React from 'react'\r\n\r\nconst HeaderLogin = (props) => {\r\n    return(\r\n        <h2>\r\n            MEMBER LOGIN\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default HeaderLogin","import React from 'react'\r\n\r\n\r\nconst Input = (props) => {\r\n\r\n    const tipo = props.type\r\n\r\n    return(\r\n        <div className='input'>\r\n            <input \r\n            placeholder={props.placeholder}\r\n            type={tipo}\r\n            >\r\n            </input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport './button.css'\r\n\r\nconst Button = (props) => {\r\n    const clase = props.clase\r\n\r\n    return(\r\n        <button className={clase}>\r\n            {props.contenido}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { Component } from 'react'\r\nimport LoginLayout from '../components/login-layout'\r\nimport HeaderLogin from '../components/Header-login'\r\nimport Input from '../components/input'\r\nimport Button from '../../../components/Buttons/button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Login extends Component{\r\n    state = {\r\n        user: this.props.currentUser\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <LoginLayout>\r\n                <HeaderLogin />\r\n                <form>\r\n                    <Input  \r\n                        placeholder='username' />\r\n                    <Input\r\n                        placeholder='password' type='password' />\r\n                    <Link to=\"/home\" >\r\n                    <Button \r\n                        contenido='ingresar'\r\n                       \r\n                    />\r\n                    </Link>\r\n                </form>\r\n            </LoginLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport './footer.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = (props) => {\r\n\r\n    const user = props.user\r\n\r\n    const typeUser = (usuario) =>{\r\n\r\n        switch(usuario){\r\n            case 'user':\r\n                return(\r\n                    <Link className='footer' to='/'>\r\n                       <h2>  ingresar como usuario </h2>\r\n                    </Link>  \r\n                )\r\n\r\n            case 'admin':\r\n                return(\r\n                    <Link className='footer' to='/admin'>\r\n                      <h2>  ingresar como {user} </h2>\r\n                    </Link>  \r\n                )\r\n\r\n            default:\r\n            break;\r\n        }\r\n    }\r\n    \r\n    \r\n    return(\r\n        <div >\r\n            \r\n                {typeUser(user)}                \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react'\r\nimport HomeLayout from '../../components/Home-Layout/home-layout'\r\nimport Logo from '../../components/Logo/logo'\r\nimport Login from '../login/containers/login'\r\nimport Footer from '../../components/footer/Footer'\r\n\r\nclass Home extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <HomeLayout>\r\n                <Logo />\r\n                <Login currentUser='user'/>\r\n                <Footer user='admin' />\r\n            </HomeLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react'\r\nimport HomeLayout from '../Home-Layout/home-layout'\r\nimport Logo from '../Logo/logo'\r\nimport Login from '../../containers/login/containers/login'\r\nimport Footer from '../footer/Footer'\r\n\r\nclass HomeAdmin extends Component{\r\n    render(){\r\n        return(\r\n            <HomeLayout>\r\n                <Logo />\r\n                <Login currentUser='admin'/>\r\n                <Footer user='user' />\r\n            </HomeLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeAdmin","import React from 'react'\r\nimport './panel.css'\r\n\r\nconst PanelLayout = (props) =>\r\n(\r\n    <div className='panel'>\r\n        {props.children}\r\n    </div>\r\n)\r\n\r\nexport default PanelLayout","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n//components\r\nimport Button from '../Buttons/button'\r\n\r\n// Api Menu\r\n\r\nimport MenuApi from '../../api/menu.json'\r\n\r\nconst Menu = (props) =>{\r\n    const menu = MenuApi.Menu[0]\r\n    \r\n \r\n\r\n    return(\r\n        \r\n        <ul>\r\n            {menu.options.map( (item) =>{\r\n                return (\r\n                    <li key={item.id}> \r\n                        <Button contenido={item.text} />   \r\n                     </li>\r\n                )\r\n            })}\r\n\r\n            <li>\r\n                <Link to='/'>\r\n                <Button clase ='exit' contenido='salir' />\r\n                \r\n                </Link>               \r\n            </li>\r\n        </ul>\r\n\r\n        \r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Menu","import React, { Component } from 'react'\r\nimport PanelLayout from './components/Panel-layout';\r\n\r\n\r\n// Components\r\n\r\nimport Logo from '../Logo/logo'\r\nimport Menu from '../Menu/Menu'\r\n\r\n\r\nclass Panel extends Component{\r\n    render(){\r\n        return(\r\n            <PanelLayout>\r\n                <Logo />\r\n                <Menu />\r\n            </PanelLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Panel","// Dependencies\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n// Components\r\nimport App from './components/App'\r\n\r\n\r\n// Container\r\nimport Home from './containers/home/home'\r\nimport HomeAdmin from './components/home-admin/homeAdmin'\r\nimport Panel from './components/Panel/Panel'\r\n\r\nconst AppRoutes = () =>\r\n    <App>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={ Home } />\r\n            <Route exact path=\"/admin\" component={ HomeAdmin } />\r\n            <Route exact path=\"/home\" component={ Panel } />\r\n            \r\n        </Switch>\r\n    </App>\r\n\r\nexport default AppRoutes","// Dependencias\nimport React from 'react';\nimport { render } from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\n\n// routes\n\nimport AppRoutes from './routes'\n\n// Assents\n\nimport './index.css';\n\nrender(\n    <Router>\n        <AppRoutes />\n    </Router>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}